name: Release automation

on:
  workflow_dispatch:
    inputs:
      commit_id:
        description: 'Commit ID/branch to tag and create a release for'
        required: true
      version_number:
        description: 'Release Version (Eg, v202212.00)'
        required: true

env:
  repository_compressed_name: ${{ github.event.repository.name }}v${{ github.event.inputs.version_number }}
  repostiory_zip_name: ${{ github.event.repository.name }}.zip

jobs:
  tag-commit:
    name: Tag commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit_id }}
      - name: Configure git identity
        env:
          ACTOR: ${{ github.actor }}
        run: |
            git config --global user.name "$ACTOR"
            git config --global user.email "$ACTOR"@users.noreply.github.com
      - name: create a new branch that references commit id
        env:
          VERSION_NUMBER: ${{ github.event.inputs.version_number }}
          COMMIT_ID: ${{ github.event.inputs.commit_id }}
        run: git checkout -b "$VERSION_NUMBER" "$COMMIT_ID"
      - name: Tag Commit and Push to remote
        env:
          VERSION_NUMBER: ${{ github.event.inputs.version_number }}
        run: |
          git tag "$VERSION_NUMBER" -a -m "Release $VERSION_NUMBER"
          git push origin --tags
      - name: Verify tag on remote
        env:
          VERSION_NUMBER: ${{ github.event.inputs.version_number }}
          COMMIT_ID: ${{ github.event.inputs.commit_id }}
        run: |
          git tag -d "$VERSION_NUMBER"
          git remote update
          git checkout tags/"$VERSION_NUMBER"
          git diff "$COMMIT_ID" tags/"$VERSION_NUMBER"
  create-zip:
    needs: tag-commit
    name: Create ZIP and verify package for release asset.
    runs-on: ubuntu-latest
    steps:
      - name: Install ZIP tools
        run: sudo apt-get install zip unzip
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit_id }}
          path: ${{ github.event.repository.name }}
          submodules: recursive
      - name: Checkout disabled submodules
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          cd "$REPO_NAME"
          git submodule update --init --checkout --recursive
      - name: Create ZIP
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          zip -r ${{ env.repostiory_zip_name }} "$REPO_NAME" -x "*.git*"
          ls ./
      - name: Validate created ZIP
        env:
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          mkdir zip-check
          mv ${{ env.repostiory_zip_name }} zip-check
          cd zip-check
          unzip ${{ env.repostiory_zip_name }} -d ${{ env.repository_compressed_name }}
          ls ${{ env.repository_compressed_name }}
          diff -r -x "*.git*" ${{ env.repository_compressed_name }}/"$REPO_NAME"/ ../"$REPO_NAME"/
      - name: Create artifact of ZIP
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repostiory_zip_name }}
          path: zip-check/${{ env.repostiory_zip_name }}
  create-release:
    permissions:
      id-token: write
    needs: create-zip
    name: Create Release and Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version_number }}
          release_name: ${{ github.event.inputs.version_number }}
          body: ${{ github.event.inputs.version_number }} Release
          draft: false
          prerelease: false
      - name: Download ZIP artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: ${{ env.repostiory_zip_name }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.repostiory_zip_name }}
          asset_name: ${{ env.repostiory_zip_name }}
          asset_content_type: application/zip
      - name: Backup Release Asset
        uses: FreeRTOS/CI-CD-Github-Actions/artifact-backup@main
        with:
          artifact_path: ./${{ env.repostiory_zip_name }}
          release_tag: ${{ github.event.inputs.version_number }}
